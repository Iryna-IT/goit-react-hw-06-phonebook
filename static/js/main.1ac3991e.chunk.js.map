{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/App.module.css","redux/items/items-actions.js","redux/items/items-reducers.js","redux/filter/filter-actions.js","redux/filter/filter-reducers.js","redux/contactsReducer.js","redux/store.js","functions/isUnique.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","functions/getContactsListToShow.js","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["module","exports","addContact","createAction","newContact","payload","deleteContact","contactId","items","createReducer","id","name","number","itemsActions","state","filter","filterContacts","filterAction","_","combineReducers","itemsReducer","filterReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","isUnique","searchName","find","toUpperCase","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAdd","existContacts","alert","uuidv4","reset","className","styles","form_contact","onSubmit","this","htmlFor","label_contact","type","input_contact","placeholder","onChange","required","pattern","btn_add","Component","defaultProps","connect","dispatch","Filter","onSearch","form_search","label_search","input_search","event","getContactsListToShow","item","includes","ContactList","onDelete","length","contact_list","map","contact","Contact","handleDelete","target","parentNode","contact_item","btn_delete","onClick","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1ac3991e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_contact\":\"ContactForm_label_contact__3bvPS\",\"input_contact\":\"ContactForm_input_contact__23IbO\",\"form_contact\":\"ContactForm_form_contact__3tx-T\",\"btn_add\":\"ContactForm_btn_add__2ktX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_search\":\"Filter_form_search__sNGY4\",\"label_search\":\"Filter_label_search__2Dz4e\",\"input_search\":\"Filter_input_search__1QY-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2y5VG\",\"contact_item\":\"ContactList_contact_item__33jCU\",\"btn_delete\":\"ContactList_btn_delete__MlbL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__19vvQ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('items/addContact', newContact => ({\r\n  payload: newContact,\r\n}));\r\n\r\nconst deleteContact = createAction('items/deleteContact', contactId => ({\r\n  payload: contactId,\r\n}));\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport itemsActions from './items-actions';\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [itemsActions.addContact]: (state, { payload }) => [payload, ...state],\r\n    [itemsActions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nexport default items;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('filter/filterContacts', filter => ({\r\n  payload: filter,\r\n}));\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContacts as filterAction } from './filter-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [filterAction]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport itemsReducer from '../redux/items/items-reducers';\r\nimport filterReducer from '../redux/filter/filter-reducers';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from '../redux/contactsReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","const isUnique = (contacts, searchName) => {\r\n  if (\r\n    contacts.find(({ name }) => name.toUpperCase() === searchName.toUpperCase())\r\n  ) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default isUnique;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport itemsActions from '../../redux/items/items-actions';\r\nimport isUnique from '../../functions/isUnique';\r\nimport styles from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onAdd: PropTypes.func,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd, existContacts } = this.props;\r\n\r\n    if (!isUnique(existContacts, this.state.name)) {\r\n      return alert(`${this.state.name} is already in contacts!`);\r\n    } else {\r\n      const id = uuidv4();\r\n      this.setState({ id: id });\r\n\r\n      onAdd({ id, name, number });\r\n\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ id: '', name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form_contact} onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\" className={styles.label_contact}>\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.input_contact}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"Enter name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\" className={styles.label_contact}>\r\n            Phone\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            className={styles.input_contact}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"Enter phone XXX-XX-XX\"\r\n            pattern=\"^(\\d{3})-\\d{2}-\\d{2}$\"\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className={styles.btn_add}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  existContacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAdd: newContact => dispatch(itemsActions.addContact(newContact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { filterContacts } from '../../redux/filter/filter-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    onSearch: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { onSearch } = this.props;\r\n    return (\r\n      <form className={styles.form_search}>\r\n        <label htmlFor=\"filter\" className={styles.label_search}>\r\n          Find contacts by name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={styles.input_search}\r\n          placeholder=\"Enter the name\"\r\n          onChange={onSearch}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSearch: event => dispatch(filterContacts(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","const getContactsListToShow = (items, filter) => {\r\n  if (filter === '') {\r\n    return items;\r\n  } else {\r\n    return items.filter(item =>\r\n      item.name.toUpperCase().includes(filter.toUpperCase()),\r\n    );\r\n  }\r\n};\r\n\r\nexport default getContactsListToShow;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport itemsActions from '../../redux/items/items-actions';\r\nimport getContactsListToShow from '../../functions/getContactsListToShow';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const { existContacts } = this.props;\r\n    const { onDelete } = this.props;\r\n    if (existContacts.length === 0) {\r\n      return <div>There are no contacts</div>;\r\n    } else {\r\n      return (\r\n        <ul className={styles.contact_list}>\r\n          {existContacts.map(contact => (\r\n            <Contact\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              onDelete={onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass Contact extends Component {\r\n  static defaultProps = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  handleDelete = e => {\r\n    const { onDelete } = this.props;\r\n    const contactId = e.target.parentNode.id;\r\n    onDelete(contactId);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, number } = this.props;\r\n    return (\r\n      <li className={styles.contact_item} id={id}>\r\n        {' '}\r\n        {name} : {number}\r\n        <button\r\n          type=\"button\"\r\n          className={styles.btn_delete}\r\n          onClick={this.handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  existContacts: getContactsListToShow(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: contactId => dispatch(itemsActions.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\nimport App from './components/App';\n\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}